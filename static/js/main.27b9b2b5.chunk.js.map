{"version":3,"sources":["components/MemberList.tsx","components/ControlPanel.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["MemberList","member","Col","className","scope","name","email","status","ScreeningForm","useState","setName","setEmail","color","setColor","Form","onSubmit","event","preventDefault","Group","controlId","Label","Control","autoFocus","type","value","onChange","e","target","Button","id","disabled","length","App","MEMBERS","addMember","Container","Row","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gWAGO,SAASA,EAAT,GAA8D,IAAzCC,EAAwC,EAAxCA,OACxB,OAAO,cAACC,EAAA,EAAD,UACP,wBAAOC,UAAU,QAAjB,UACI,wBAAOA,UAAU,aAAjB,UACI,oBAAIC,MAAM,MAAV,eACA,oBAAIA,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,uBAEJ,gCACI,+BACI,oBAAIA,MAAM,MAAV,eACA,6BAAKH,EAAOI,OACZ,6BAAKJ,EAAOK,QACZ,6BAAKL,EAAOM,mB,oBCdrB,SAASC,IACZ,MAAwBC,mBAAS,IAAjC,mBAAOJ,EAAP,KAAaK,EAAb,KACA,EAA0BD,mBAAS,IAAnC,mBAAOH,EAAP,KAAcK,EAAd,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAUA,OACE,cAACX,EAAA,EAAD,CAAKC,UAAU,QAAf,SACE,eAACW,EAAA,EAAD,CAAMC,SANV,SAAsBC,GACpBA,EAAMC,kBAKJ,UACA,eAACH,EAAA,EAAKI,MAAN,CAAYC,UAAU,OAAtB,UACI,cAACL,EAAA,EAAKM,MAAN,CAAYjB,UAAU,QAAtB,yBACA,cAACW,EAAA,EAAKO,QAAN,CACElB,UAAU,UACVmB,WAAS,EACTC,KAAK,OACLC,MAAOnB,EACPoB,SAAU,SAACC,GAAD,OAAOhB,EAAQgB,EAAEC,OAAOH,aAGtC,eAACV,EAAA,EAAKI,MAAN,CAAYC,UAAU,QAAtB,UACE,cAACL,EAAA,EAAKM,MAAN,CAAYjB,UAAU,QAAtB,qBACA,cAACW,EAAA,EAAKO,QAAN,CACElB,UAAU,UACVmB,WAAS,EACTC,KAAK,QACLC,MAAOlB,EACPmB,SAAU,SAACC,GAAD,OAAOf,EAASe,EAAEC,OAAOH,aAGvC,eAACV,EAAA,EAAKI,MAAN,CAAYC,UAAU,cAAtB,UACE,cAACL,EAAA,EAAKM,MAAN,CAAYjB,UAAU,QAAtB,kCACA,cAACW,EAAA,EAAKO,QAAN,CACElB,UAAU,UACVoB,KAAK,SACLC,MAAOZ,EACPa,SAAU,SAACC,GAAD,OAAOb,EAASa,EAAEC,OAAOH,aAGvC,cAACI,EAAA,EAAD,CAAQL,KAAK,SAASM,GAAG,SAASC,WAvC/BxB,EAAMyB,OAAS,GAAKnB,EAAMmB,OAAS,GAAK1B,EAAK0B,OAAS,GAuCzD,yB,0BCxBKC,MAdf,WACE,MAAoBvB,mBAAiBwB,EAAQ,IAAtCC,EAAP,oBACA,OACE,eAACC,EAAA,EAAD,CAAWhC,UAAU,MAArB,UACE,cAACiC,EAAA,EAAD,UACE,cAAC5B,EAAD,MAEF,cAAC4B,EAAA,EAAD,UACE,cAACpC,EAAD,CAAYC,OAAQiC,UCJbG,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.27b9b2b5.chunk.js","sourcesContent":["import { Col } from 'react-bootstrap';\r\nimport { Member } from '../interfaces/member';\r\n\r\nexport function MemberList({member}: {member: Member}): JSX.Element {\r\n    return <Col> \r\n    <table className=\"table\">\r\n        <thead className=\"thead-dark\">\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">Name</th>\r\n            <th scope=\"col\">Email</th>\r\n            <th scope=\"col\">Status</th>\r\n        </thead>\r\n        <tbody>\r\n            <tr>\r\n                <th scope=\"row\">1</th>\r\n                <td>{member.name}</td>\r\n                <td>{member.email}</td>\r\n                <td>{member.status}</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n    </Col>\r\n\r\n}","import React, { useState } from 'react';\r\nimport { Button, Col, Form } from 'react-bootstrap';\r\n\r\nexport function ScreeningForm(): JSX.Element {\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [color, setColor] = useState(\"\");\r\n  \r\n    function validateForm() {\r\n      return email.length > 0 && color.length > 0 && name.length > 0;\r\n    }\r\n  \r\n    function handleSubmit(event: { preventDefault: () => void; }) {\r\n      event.preventDefault();\r\n    }\r\n  \r\n    return (\r\n      <Col className=\"Login\">\r\n        <Form onSubmit={handleSubmit}>\r\n        <Form.Group controlId=\"name\">\r\n            <Form.Label className=\"label\">Full Name: </Form.Label>\r\n            <Form.Control\r\n              className=\"textBox\"\r\n              autoFocus\r\n              type=\"name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label className=\"label\">Email: </Form.Label>\r\n            <Form.Control\r\n              className=\"textBox\"\r\n              autoFocus\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"healthCheck\">\r\n            <Form.Label className=\"label\">Health Check Color: </Form.Label>\r\n            <Form.Control\r\n              className=\"textBox\"\r\n              type=\"status\"\r\n              value={color}\r\n              onChange={(e) => setColor(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Button type=\"submit\" id=\"submit\" disabled={!validateForm()}>\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n    );\r\n  }","import React, { useState } from 'react';\nimport MEMBERS from './assets/members.json'\nimport './App.css';\nimport { MemberList } from './components/MemberList';\nimport { ScreeningForm } from './components/ControlPanel';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Row } from 'react-bootstrap'\nimport { Member, addMember } from './interfaces/member'\n\n\nfunction App(): JSX.Element {\n  const [addMember] = useState<Member>(MEMBERS[0]);\n  return (\n    <Container className=\"App\">\n      <Row>\n        <ScreeningForm></ScreeningForm>\n      </Row>\n      <Row>\n        <MemberList member={addMember}></MemberList>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}