{"version":3,"sources":["components/MemberList.tsx","components/ControlPanel.tsx","components/EditModal.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["MemberList","theClub","displayIndex","index","Col","className","scope","map","person","name","email","status","ControlPanel","getMember","showEditModal","addMember","useState","id","setId","setName","setEmail","setStatus","Form","onSubmit","event","preventDefault","Group","controlId","Label","Control","autoFocus","type","value","onChange","e","target","Button","disabled","length","onClick","EditModal","checkMember","changeMember","visible","setVisible","club","setIndex","hide","Modal","show","onHide","backdrop","keyboard","datatestid","ModalHeader","closeButton","ModalBody","min","max","ev","num","valueAsNumber","console","log","as","rows","App","MEMBERS","setClub","Container","Row","newName","newEmail","newStatus","p","newClub","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b7d05053.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Col } from 'react-bootstrap';\r\nimport * as ReactBootStrap from 'react-bootstrap';\r\nimport { Person } from '../interfaces/member';\r\n\r\nexport function MemberList({theClub}:{theClub: (Person[])}): JSX.Element {\r\n\r\n    function renderList(person: Person, index: number){\r\n        return (\r\n            <tr key={index}>\r\n                <td>{displayIndex(index)}</td>\r\n                <td>{person.name}</td>\r\n                <td>{person.email}</td>\r\n                <td>{person.status}</td>\r\n            </tr>\r\n    )}\r\n\r\n    function displayIndex(index: number){\r\n        if(index>0){\r\n            return index;\r\n        }\r\n    }\r\n\r\n    return <Col> \r\n    <ReactBootStrap.Table>\r\n        <thead className=\"thead-dark\">\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">Name</th>\r\n            <th scope=\"col\">Email</th>\r\n            <th scope=\"col\">Status</th>\r\n            <th scope=\"col\"></th>\r\n        </thead>\r\n        <tbody>\r\n            {theClub.map(renderList)}\r\n        </tbody>\r\n    </ReactBootStrap.Table>\r\n    </Col>\r\n\r\n}","import { useState } from 'react';\r\nimport { Button, Col, Form } from 'react-bootstrap';\r\nimport { Person } from '../interfaces/member';\r\n\r\nexport function ControlPanel({getMember, showEditModal, addMember}: {getMember: (c:number)=>Person, showEditModal: (b: boolean)=>void, addMember: (p:Person) => void}): JSX.Element {\r\n    const [id, setId] = useState(0);\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [status, setStatus] = useState(\"\");\r\n  \r\n    function validateForm() {\r\n      return email.length > 0 && status.length > 0 && name.length > 0;\r\n    }\r\n\r\n    function validateTable() {\r\n      if(getMember(1))\r\n        return getMember(1).name !== \"\" && getMember(1).email !== \"\" && getMember(1).status !== \"\";\r\n      else\r\n        return false;\r\n    }\r\n  \r\n    function handleSubmit(event: { preventDefault: () => void; }) {\r\n      event.preventDefault();\r\n      saveMember();\r\n      setName(\"\"); //clears the name box\r\n      setEmail(\"\"); //clears the email box\r\n      setStatus(\"\"); //clears the status box\r\n    }\r\n\r\n    function saveMember(){\r\n      addMember({id, name, email, status});\r\n      setId(id+1);\r\n    }\r\n\r\n    function editMember() {\r\n      showEditModal(true);\r\n    }\r\n  \r\n    return (\r\n      <Col className=\"Login\">\r\n        <Form onSubmit={handleSubmit}>\r\n        <Form.Group controlId=\"name\">\r\n            <Form.Label className=\"label\">Full Name: </Form.Label>\r\n            <Form.Control\r\n              className=\"textBox\"\r\n              autoFocus\r\n              type=\"name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label className=\"label\">Email: </Form.Label>\r\n            <Form.Control\r\n              className=\"textBox\"\r\n              autoFocus\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"healthCheck\">\r\n            <Form.Label className=\"label\">Health Check Color: </Form.Label>\r\n            <Form.Control\r\n              className=\"textBox\"\r\n              type=\"status\"\r\n              value={status}\r\n              onChange={(e) => setStatus(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Button type=\"submit\" id=\"submit\" disabled={!validateForm()}>\r\n            Submit\r\n          </Button>\r\n          <Button onClick={()=>editMember()} disabled={!validateTable()}>\r\n            Edit\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n    );\r\n  }\r\n","import React, { useState } from 'react';\r\nimport {Modal, ModalBody, Form, Button} from 'react-bootstrap'\r\nimport ModalHeader from 'react-bootstrap/esm/ModalHeader';\r\nimport { Person } from '../interfaces/member';\r\n\r\nexport function EditModal({getMember, checkMember, changeMember, visible, setVisible, club}: \r\n    {getMember: (b: number)=>Person, \r\n    checkMember: (d:number)=>boolean, \r\n    changeMember: (e:number, f:string, g:string, h:string)=> void, \r\n    visible: boolean, \r\n    setVisible: (c:boolean)=>void,\r\n    club: Person[]}): JSX.Element {\r\n\r\n    const [index, setIndex] = useState(0);\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [status, setStatus] = useState(\"\");\r\n\r\n    const hide = ()=>setVisible(false);\r\n\r\n    function handleIndexSearch(num: number){\r\n        if(checkMember(num))\r\n            setIndex(num);\r\n    }\r\n\r\n    function handleSearch(event: { preventDefault: () => void; }) {\r\n        event.preventDefault();\r\n\r\n        var person = getMember(index);\r\n\r\n        setName(person.name);\r\n        setEmail(person.email);\r\n        setStatus(person.status);\r\n    }\r\n\r\n    function saveChanges(event: { preventDefault: () => void; }){\r\n        event.preventDefault();\r\n\r\n        console.log(\"save enter\");\r\n        changeMember(index, name, email, status);\r\n        console.log(\"change made\");\r\n\r\n        setName(\"\");\r\n        setEmail(\"\");\r\n        setStatus(\"\");\r\n    }\r\n\r\n    return (\r\n    <Modal\r\n        show={visible}\r\n        onHide={hide}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        datatestid=\"modal\"\r\n    >\r\n        <ModalHeader closeButton>\r\n            Edit\r\n        </ModalHeader>\r\n        <ModalBody>\r\n            <Form \r\n            onSubmit={handleSearch}>\r\n                <Form.Group>\r\n                    <Form.Label>\r\n                        Row Number\r\n                    </Form.Label>\r\n                </Form.Group>\r\n                    <input type=\"number\" min=\"1\" max={club.length-1} onChange={(ev: React.ChangeEvent<HTMLInputElement>) => handleIndexSearch(ev.target.valueAsNumber)}></input>\r\n                <Button type=\"submit\" id=\"submit\">\r\n                    Search\r\n                </Button>\r\n            </Form>\r\n\r\n            <Form\r\n            onSubmit={saveChanges}>\r\n                <Form.Group>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control as=\"textarea\" rows={1}\r\n                    value={name}\r\n                    onChange={(ev: React.ChangeEvent<HTMLTextAreaElement>) => setName(ev.target.value)}/>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>email</Form.Label>\r\n                    <Form.Control as=\"textarea\" rows={1}\r\n                    value={email}\r\n                    onChange={(ev: React.ChangeEvent<HTMLTextAreaElement>) => setEmail(ev.target.value)}/>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Status</Form.Label>\r\n                    <Form.Control as=\"textarea\" rows={1}\r\n                    value={status}\r\n                    onChange={(ev: React.ChangeEvent<HTMLTextAreaElement>) => setStatus(ev.target.value)}/>\r\n                </Form.Group>\r\n                <Button type=\"submit\" id=\"Save Changes\" onClick={hide}>\r\n                Save Changes\r\n                </Button>\r\n            </Form>\r\n        </ModalBody>\r\n    </Modal>\r\n)}","import React, { useState } from 'react';\nimport MEMBERS from './assets/members.json'\nimport './App.css';\nimport { MemberList } from './components/MemberList';\nimport { ControlPanel } from './components/ControlPanel';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Row } from 'react-bootstrap'\nimport { Person } from './interfaces/member'\nimport { EditModal } from './components/EditModal';\n//import { ReactComponent as ClubBanner } from './assets/banner.svg';\n//import { ReactComponent as ClubLogo } from './assets/logo.svg';\n\nfunction App(): JSX.Element {\n  const [club, setClub] = useState<Person[]>(MEMBERS);\n  const [visible, setVisible] = useState<boolean>(false);\n  \n  function addMember(person: Person){\n    //console.log(person);\n    setClub([...club, person]);\n  }\n\n  function getMember(index:number){\n    return club[index];\n  }\n\n  function checkMember(index:number): boolean{\n    if(club[index])\n      return true;\n    else\n      return false\n  }\n\n  function changeMember(index:number, newName:string, newEmail:string, newStatus:string){\n    const p: Person = {...club[index], name: newName, email: newEmail, status: newStatus};\n    const newClub = [...club];\n\n    newClub[index] = p;\n    setClub(newClub);\n  }\n\n  return (\n    <Container className=\"App\">\n      <Row>\n        <ControlPanel getMember={getMember} showEditModal={setVisible}  addMember={addMember}></ControlPanel>\n      </Row>\n      <Row>\n        <EditModal getMember={getMember} checkMember={checkMember} changeMember={changeMember} visible={visible} setVisible={setVisible} club={club}></EditModal>\n        <MemberList theClub={club}></MemberList>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}