{"version":3,"sources":["components/MemberList.tsx","components/ControlPanel.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["MemberList","props","Col","className","scope","theClub","map","person","index","name","email","status","ScreeningForm","useState","setName","setEmail","setStatus","Form","onSubmit","event","preventDefault","addMember","Group","controlId","Label","Control","autoFocus","type","value","onChange","e","target","Button","id","disabled","length","App","MEMBERS","club","setClub","Container","Row","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6UAKO,SAASA,EAAWC,GAavB,OAAO,cAACC,EAAA,EAAD,UACP,eAAC,IAAD,WACI,wBAAOC,UAAU,aAAjB,UACI,oBAAIC,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,uBAEJ,gCACKH,EAAMI,QAAQC,KAnBvB,SAAoBC,EAAgBC,GAChC,OACI,+BACI,6BAAKD,EAAOE,OACZ,6BAAKF,EAAOG,QACZ,6BAAKH,EAAOI,WAHPH,a,oBCLd,SAASI,EAAcX,GAC1B,MAAwBY,mBAAS,IAAjC,mBAAOJ,EAAP,KAAaK,EAAb,KACA,EAA0BD,mBAAS,IAAnC,mBAAOH,EAAP,KAAcK,EAAd,KACA,EAA4BF,mBAAS,IAArC,mBAAOF,EAAP,KAAeK,EAAf,KAkBA,OACE,cAACd,EAAA,EAAD,CAAKC,UAAU,QAAf,SACE,eAACc,EAAA,EAAD,CAAMC,SAdV,SAAsBC,GACpBA,EAAMC,iBAQNnB,EAAMoB,UAAU,CAACZ,OAAMC,QAAOC,YAK5B,UACA,eAACM,EAAA,EAAKK,MAAN,CAAYC,UAAU,OAAtB,UACI,cAACN,EAAA,EAAKO,MAAN,CAAYrB,UAAU,QAAtB,yBACA,cAACc,EAAA,EAAKQ,QAAN,CACEtB,UAAU,UACVuB,WAAS,EACTC,KAAK,OACLC,MAAOnB,EACPoB,SAAU,SAACC,GAAD,OAAOhB,EAAQgB,EAAEC,OAAOH,aAGtC,eAACX,EAAA,EAAKK,MAAN,CAAYC,UAAU,QAAtB,UACE,cAACN,EAAA,EAAKO,MAAN,CAAYrB,UAAU,QAAtB,qBACA,cAACc,EAAA,EAAKQ,QAAN,CACEtB,UAAU,UACVuB,WAAS,EACTC,KAAK,QACLC,MAAOlB,EACPmB,SAAU,SAACC,GAAD,OAAOf,EAASe,EAAEC,OAAOH,aAGvC,eAACX,EAAA,EAAKK,MAAN,CAAYC,UAAU,cAAtB,UACE,cAACN,EAAA,EAAKO,MAAN,CAAYrB,UAAU,QAAtB,kCACA,cAACc,EAAA,EAAKQ,QAAN,CACEtB,UAAU,UACVwB,KAAK,SACLC,MAAOjB,EACPkB,SAAU,SAACC,GAAD,OAAOd,EAAUc,EAAEC,OAAOH,aAGxC,cAACI,EAAA,EAAD,CAAQL,KAAK,SAASM,GAAG,SAASC,WA/C/BxB,EAAMyB,OAAS,GAAKxB,EAAOwB,OAAS,GAAK1B,EAAK0B,OAAS,GA+C1D,yB,0BC5BKC,MApBf,WACE,MAAwBvB,mBAAmBwB,GAA3C,mBAAOC,EAAP,KAAaC,EAAb,KAOA,OACE,eAACC,EAAA,EAAD,CAAWrC,UAAU,MAArB,UACE,cAACsC,EAAA,EAAD,UACE,cAAC7B,EAAD,CAAeS,UARrB,SAAmBd,GAEjBgC,EAAQ,GAAD,mBAAKD,GAAL,CAAW/B,UAQhB,cAACkC,EAAA,EAAD,UACE,cAACzC,EAAD,CAAYK,QAASiC,UCTdI,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b258f6bf.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Col } from 'react-bootstrap';\r\nimport * as ReactBootStrap from 'react-bootstrap';\r\nimport { Person } from '../interfaces/member';\r\n\r\nexport function MemberList(props:{theClub: Person[]}): JSX.Element {\r\n\r\n    function renderList(person: Person, index: number){\r\n        return (\r\n            <tr key={index}>\r\n                <td>{person.name}</td>\r\n                <td>{person.email}</td>\r\n                <td>{person.status}</td>\r\n            </tr>\r\n        )\r\n    }\r\n    \r\n\r\n    return <Col> \r\n    <ReactBootStrap.Table>\r\n        <thead className=\"thead-dark\">\r\n            <th scope=\"col\">Name</th>\r\n            <th scope=\"col\">Email</th>\r\n            <th scope=\"col\">Status</th>\r\n        </thead>\r\n        <tbody>\r\n            {props.theClub.map(renderList)}\r\n        </tbody>\r\n    </ReactBootStrap.Table>\r\n    </Col>\r\n\r\n}","import React, { useState } from 'react';\r\nimport { Button, Col, Form } from 'react-bootstrap';\r\nimport { Person } from '../interfaces/member';\r\n\r\nexport function ScreeningForm(props: {addMember: (p:Person) => void}): JSX.Element {\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [status, setStatus] = useState(\"\");\r\n  \r\n    function validateForm() {\r\n      return email.length > 0 && status.length > 0 && name.length > 0;\r\n    }\r\n  \r\n    function handleSubmit(event: { preventDefault: () => void; }) {\r\n      event.preventDefault();\r\n      saveMember();\r\n    }\r\n\r\n    function saveMember(){\r\n      //console.log(name);\r\n      //console.log(email);\r\n      //console.log(status);\r\n      props.addMember({name, email, status});\r\n    }\r\n  \r\n    return (\r\n      <Col className=\"Login\">\r\n        <Form onSubmit={handleSubmit}>\r\n        <Form.Group controlId=\"name\">\r\n            <Form.Label className=\"label\">Full Name: </Form.Label>\r\n            <Form.Control\r\n              className=\"textBox\"\r\n              autoFocus\r\n              type=\"name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label className=\"label\">Email: </Form.Label>\r\n            <Form.Control\r\n              className=\"textBox\"\r\n              autoFocus\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"healthCheck\">\r\n            <Form.Label className=\"label\">Health Check Color: </Form.Label>\r\n            <Form.Control\r\n              className=\"textBox\"\r\n              type=\"status\"\r\n              value={status}\r\n              onChange={(e) => setStatus(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Button type=\"submit\" id=\"submit\" disabled={!validateForm()}>\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n    );\r\n  }","import React, { useState } from 'react';\nimport MEMBERS from './assets/members.json'\nimport './App.css';\nimport { MemberList } from './components/MemberList';\nimport { ScreeningForm } from './components/ControlPanel';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Row } from 'react-bootstrap'\nimport { Person } from './interfaces/member'\n\nfunction App(): JSX.Element {\n  const [club, setClub] = useState<Person[]>(MEMBERS);\n  \n  function addMember(person: Person){\n    //console.log(person);\n    setClub([...club, person]);\n  }\n\n  return (\n    <Container className=\"App\">\n      <Row>\n        <ScreeningForm addMember={addMember}></ScreeningForm>\n      </Row>\n      <Row>\n        <MemberList theClub={club}></MemberList>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}